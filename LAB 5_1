#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

struct node {
    int data;
    node* next;
};

void insert(node*& head, int data) {
    node* newNode = new node;
    newNode->data = data;
    newNode->next = head;
    head = newNode;
}

bool search(node* head, int key) {
    while (head != NULL) {
        if (head->data == key)
            return true;
        head = head->next;
    }
    return false;
}

int hashFunction(int data) {
    return data % 10;
}

int main() {
    srand(time(NULL));
    const int size = 11;
    int arr[size];
    for (int i = 0; i < size; i++)
        arr[i] = rand() % 55001 + 24000;

    node* hashTable[10] = { NULL };
    for (int i = 0; i < size; i++) {
        int index = hashFunction(arr[i]);
        insert(hashTable[index], arr[i]);
    }

    cout << "Original array: ";
    for (int i = 0; i < size; i++)
        cout << arr[i] << " ";
    cout << endl;

    cout << "Hash table: " << endl;
    for (int i = 0; i < 10; i++) {
        cout << "[" << i << "]: ";
        node* current = hashTable[i];
        while (current != NULL) {
            cout << current->data << " ";
            current = current->next;
        }
        cout << endl;
    }

    int key;
    cout << "Enter a number to search: ";
    cin >> key;

    int index = hashFunction(key);
    if (search(hashTable[index], key))
        cout << "Found!" << endl;
    else
        cout << "Not found." << endl;

    return 0;
}
